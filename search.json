[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Danielle-labs",
    "section": "",
    "text": "Post With Code\n\n\n\nnews\n\ncode\n\nanalysis\n\n\n\n\n\n\n\n\n\nAug 29, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nAug 26, 2025\n\n\nTristan O’Malley\n\n\n\n\n\n\n\n\n\n\n\n\nHow I Built An Active Directory Lab in Azure\n\n\n\nactive-directory\n\nazure\n\niam\n\nprojects\n\nsecurity\n\n\n\n\n\n\n\n\n\nJun 30, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nMy Experience with the Azure Fundamentals AZ-900 Exam\n\n\n\nazure\n\n\n\n\n\n\n\n\n\nApr 22, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nMore IAM Fundamentals\n\n\n\niam\n\n\n\n\n\n\n\n\n\nMar 26, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nLearning IAM Fundamentals\n\n\n\niam\n\n\n\n\n\n\n\n\n\nMar 17, 2025\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/03-iam-fundamentals/index.html",
    "href": "posts/03-iam-fundamentals/index.html",
    "title": "Learning IAM Fundamentals",
    "section": "",
    "text": "I first learned about Identity and Access Management (IAM) while exploring AWS. The AWS documentation provided insights into what IAM is and why it is used. Further exploration of AWS’ IAM service involved creating users, assigning various permissions, and adding policies for each individual. This experience sparked a growing curiosity that continues to expand.\n\nWhile browsing Reddit, I came across a link to a Udemy course called Identity and Access Management (IAM): Vendor Neutral Course by Ahmed Abdelghafar and decided to purchase it during a sale. Although the course is short (~2 hours), it offers a wealth of knowledge. Some of the concepts discussed were familiar to me. Topics like Mulit-Factor Authentication, Single Sign-On(SSO), and Zero Trust to name a few were great to review and I even gained a better understanding of those concepts. However, several concepts were entirely new to me. I decided to create a post describing a few key concepts I learned during this course.\n\nIdentity Lifecycle Management\nIdentity Lifecycle Management oversees the processes that manage the entire user identity lifecycle within an organization. It consists of handling joiners, movers, and leavers to ensure that access is correctly granted, adjusted, or removed as needed. Joiners refer to newly hired employees, movers refer to individuals who have either received a promotion or changed departments, and leavers refer to those who have resigned or are otherwise no longer with the organization. It is crucial for access rights to align with users’ job roles, ensuring they have only the necessary permissions—nothing more. This concept is known as the Principle of Least Privilege. Implementing this principle minimizes the attack surface and prevents the abuse of privileges.\n\n\nAccess Control Types\nThe course discussed two main types of access control:\n\nRBAC (Role-Based Access Control): Access is assigned based on the user’s role.\nABAC (Attribute-Based Access Control): Access is assigned based on user attributes (e.g., location, employment type).\n\nOther access control types include:\n\nPBAC (Policy-Based Access Control): Access is based on predefined policies.\nDAC (Discretionary Access Control): Allows resource owners to determine and manage access to their data.\nMAC (Mandatory Access Control): A security model that determines access to resources based on security labels and clearance levels.\n\nAccess control mechanisms help protect sensitive information, ensure regulatory compliance, and minimize insider threats.\n\n\nCompliance \nDuring this section of the course, I realized that I was more familiar with compliance than I initially thought. I follow many cybersecurity professionals on social media, so much of the terminology and many of the frameworks discussed in the course were already familiar to me.\nGRC (Governance, Risk, and Compliance) is a term I frequently encounter. Governance involves defining and enforcing policies to control access to data and other resources within an organization. Risk refers to the potential for harm or loss due to cyberattacks or data breaches. Compliance entails adhering to laws, standards, and regulations to safeguard sensitive data and other digital assets from threats. Compliance also includes auditing, reporting, and continuous monitoring to detect potential violations.\nThe course covered several compliance frameworks:\n\nNIST (National Institute of Standards and Technology): A US framework providing security guidelines for federal agencies and serves as a baseline for other industries.\nPCI-DSS(Payment Card Industry Data Security Standard): A set of policies for ensuring the secure handling credit card data, including access controls and data protection practices.\nHIPAA(Health Insurance Portability and Accountability Act): A US law requiring health care organizations to protect patient data with specific guidelines on access control and data privacy.\nGDPR(General Data Protection Regulation): a European Union regulation focused on data privacy and protection with guidelines on who can access personal data, where it’s stored and how it’s processed.\n\nWhen I initially thought of compliance frameworks, the first one that came to mind was a financial regulation I learned about in a business law course in college. Although it was not mentioned in the course, SOX (Sarbanes-Oxley Act) is something I have seen referenced in job descriptions. SOX is a federal law that establishes requirements for financial record-keeping and reporting in corporations. It was enacted to protect investors from fraudulent financial reporting by corporations. This law was implemented following several widely reported financial scandals, most notably the Enron scandal.\nOverall, completing this course strengthened my confidence in foundational IAM concepts. Although this course doesn’t everything every concept or tool, I think it serves as a excellent starting point for further exploration into Identity and Access Management."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/06-how-i-built-an-active-directory-lab-in-azure/index.html",
    "href": "posts/06-how-i-built-an-active-directory-lab-in-azure/index.html",
    "title": "How I Built An Active Directory Lab in Azure",
    "section": "",
    "text": "Active Directory is a Microsoft directory service that manages and organizes resources including users, computers, and other devices. I wanted to gain experience with this service and decided to create an Active Directory lab in Microsoft Azure.\nWhat is the point of learning Active Directory? Many companies with Windows-based infrastructure rely on it heavily to manage users, computers, and resources across their network. Even as organizations move to the cloud, understanding it will help me manage hybrid environments where both on-premises and cloud identity services are used.\nThis is part 1 of a series where I learn about Active Directory and its features.\nStep 1: Create a Resource Group\nI needed to create a resource group that would hold the resources I needed for the project. The purpose of a resource group is to organize and group resources, simplifying management. If needed, I could delete the resources group and it would delete the resources associated with it. It made cost management easier. I was able to set up a budget for my resource group, which helped me track the costs of my resources.\nStep 2: Create a Virtual Network (VNet) and Subnets\nInside of my resource group, I created a virtual network to host my virtual machines. In this step, I edited the default subnet range so that it fell within the defined range of the IPv4 address space of the virtual network. I provisioned Azure Bastion within my virtual network, creating my AzureBastionSubnet. AzureBastionSubnet is the mandatory subnet for the Azure Bastion service and it needs at least a /26 address range. The purpose of Azure Bastion was to provide a secure RDP connection to my VMs. RDP stands for Remote Desktop Protocol and allows users to remotely access and control a computer over a network. Note that with Azure Bastion, my VMs didn’t need a public IP address and I didn’t need to open any inbound ports.\n\n\n\nCreating a virtual network in Microsoft Azure.\n\n\n\n\n\nCreated an Azure Bastion\n\n\nStep 3: Deploy Virtual Machines for Domain Controllers\nNext, I set up two virtual machines with the Windows Server 2019 image that will serve as my domain controllers. A domain controller is a server that responds to authentication requests from users and computers. These domain controllers will host Active Directory and its services. I launched the virtual machines in an availability set to ensure high availability and a lower risk of a single point of failure. I also changed the default size of the VMs to Standard B1ms to optimize cost.\n\n\n\n\nCreated virtual network in Azure\n\n\nStep 4: Deploy Bastion\nAfter I navigated to my VNet and selected Bastion, I deployed the service into my AzureSubnetBastion I created earlier. This will automatically created a public IP for the Bastion service itself. From there, I was able to connect to it from my browser using my VM username and password.\n\n\n\nConnect to virtual machine using Bastion\n\n\nStep 5: Configure the first domain controller\nOnce I connected to my VM, the Server Manager dashboard opened up. From the dashboard,  I went to Computer Management &gt; Disk Management to configure my disk. This disk hosted my Active Directory. Then, I went to Manage &gt; Add Roles and Features, I went through the screens shown here to install Active Directory Domain Services. First, I choose role-based configuration. Then, I selected my destination server. Next, I checked off Active Directory Domain Services as my server role.  Note that I already have this installed.\n\n\n\nAdd Roles and Features\n\n\n\n\n\nType of Installation\n\n\n\n\n\nSelect server to install roles and features\n\n\n\n\n\nInstall Active Directory Domain Services\n\n\nStep 6: Promote the first domain controller\nPromoting the domain controller simply means that converting a server into a domain controller. Because I already have this installed, I decided to grab screenshots I took from a Udemy course that helped me with this step. On the installation progress page, I selected the “Promote Your Server…” that you see underlined. In the Deployment Configuration panel, I added a new forest, which is the top level of organization within Active Directory. The forest contains domains, users, devices, etc in Active Directory. In this step, I specified my root domain name. Next, in the Domain Controller Options panel, I made my domain controller a DNS server by checking it off. For the Paths panel, I changed my disk paths to reflect the the disk configuration I did earlier.\n\n\n\npromote to domain controller\n\n\n\n\n\nAdd a new forest\n\n\n\n\n\ndomain controller options screen\n\n\n\n\n\nRename disks\n\n\nAfter this step, my connection restarted. While my connection was restarting, I changed my Private IP for my domain controller from Dynamic to Static to ensure that my private IP address never changes. This private IP is important because it served as a DNS server for my Active Directory, is necessary to promote the second domain controller and needs to be able to read the DNS of my root domain name.\nStep 7: Configure DNS\nI went back to my VNet’s settings in Azure, changing the DNS servers from a public DNS to a Custom server using the private IP address of my first domain controller. This will ensure that the VMs in the VNet resolve my domain name. I restarted my VMs to make sure that this change was picked up.\nStep 8: Promote & Configure second domain controller\nI combined these two steps because setting up my second domain controller was the same as the first with a few exceptions. First, in the ‘Deployment Configuration’ panel shown above, I chose the ‘Add a domain controller to an existing domain’ option. Then, I supplied the credentials I created for the first domain controller. After the second domain controller was configured and promoted, I configured the DNS like I did with the first one. The purpose of creating a second domain controller is for redundancy. If my first domain controller goes down, my network will still operate because I have a second one.\nStep 9: Create a User\nI wanted to test out my environment to see if I would be able to create a test user. From the Server Manager dashboard, I went to Tools &gt; Active Directory Users and Computers. Next, I went to my domain, navigated to my Users folder and began the process of creating a new user. \n\n\n\nCreating a test user In Active Directory\n\n\nI went through the screens to create my new user. And, just like that my new user was created! When I switch between domain controllers, the user I created reflected on both servers. This is an example of replication in Active Directory. If I’m working off of different domain controllers, changes like user creation get synced across the environment.\n\nStep 10: Joining a Client Machine to the Domain\nI launched a third VM with the Windows Server 2022 image. This will serve as my client machine. I made sure to launch it in the same resource group as that holds my other resources(domain controller, network, etc). I then used Azure Bastion to connect to my VM.\nInside my client VM, I opened the Control Panel and navigated to Network and Internet &gt; Network and Sharing Center. Then after clicking the Ethernet icon, I set the DNS Server to the private IP address of my first domain controller. This is so this machine could find the root domain I created.\n\n\n\nShowing ethernet page\n\n\n\n\n\nSelecting the Ethernet property\n\n\n\n\n\nUse the DNS Server address\n\n\nI joined the the domain by once again opening the Control Panel and this time navigating to System & Security. From there, a page opened up and I went to Advanced System Settings &gt; Computer Name &gt; Change… &gt;Member of Domain. I entered the root domain name I created earlier. After a few seconds, a prompt appeared where I entered the credentials of my first domain controller. Seconds after that I received a message welcoming me to my domain.\n\n\n\nEntered domain\n\n\nAfter hitting okay, another message appeared letting me know that the machine had to restart before the changes took affect. After the reboot, I verified the domain login using nslookup. I also tried my hand in using Powershell to accomplish this same task.\n\n\n\nUsing powershell to verify domain login.\n\n\nThat is all for part 1! Through building this lab, not only did I learn about Active Directory but I gained a better understanding of networking. I learned a more secure way of connection to virtual machines using Bastion. A lesson I’ll remember is that using RDP to connect to virtual machines exposes RDP ports and this is considered a security risk. This lab was great because it introduced me to Powershell. I plan to use Powershell for future labs and projects so I am dedicating my time to learning it."
  },
  {
    "objectID": "posts/04-azure-fundamentals/index.html",
    "href": "posts/04-azure-fundamentals/index.html",
    "title": "My Experience with the Azure Fundamentals AZ-900 Exam",
    "section": "",
    "text": "It’s been a bit quiet on my blog, but I’ve kept busy!\nI spent everyday from mid-March to the beginning of April preparing for the Azure Fundamentals AZ-900 exam. After taking the exam on April 11th, I am happy to share that I passed the exam! With that, I thought I’d share the resources I used for the exam.\nMicrosoft Virtual Training Days\nMicrosoft’s Azure Virtual Training Day was my introduction to the basics of cloud computing in Azure. After attending the free two-day session, I received a 50% off voucher for the exam.\nMicrosoft Learn\nThe AZ-900 course on Microsoft Learn took me through each exam objective, where I was quizzed along the way and completed lab exercises to reinforce my understanding of the material.\nAZ-900 Exam Cram\nI must have watched this video 5-6 times! This AZ-900 exam cram by Pete Zerger was a huge help to me in understanding cloud computing concepts and the services Azure offers. In addition to the video, I downloaded his PDF presentation, where I took additional notes and completed his practice exam.\nTutorials Dojo\nI purchased a study guide and practice exams from Tutorials Dojo and these were worth the money. The study guide highlights many of Azure services helped me to understand concepts that I didn’t quite grasp using other resources. The practice exams were great as it prepared me the types of questions I would see on the exam.\nTakeaways \nOverall, my experience with the Azure Fundamentals AZ-900 exam was great! What I found is that carving out a chuck of time everyday to prepare for the exam helped to solidify concepts in my head. Those moments, whether it be an hour or even thirty minutes really made a difference in my learning. It was amazing to see my progress as it got closer to the exam date.\nThis is just one of a few Azure certification exams I’m looking to obtain and I look forward to taking the others in the future."
  },
  {
    "objectID": "posts/03-more-iam-fundamentals/index.html",
    "href": "posts/03-more-iam-fundamentals/index.html",
    "title": "More IAM Fundamentals",
    "section": "",
    "text": "I found another IAM course on Udemy. This course called Foundations of Identity Access Management, covered much of the same topics the previous course covered. However, it goes into more detail and introduced topics not mentioned in the previously. Having said that, I thought I’d share more of what I learned in IAM through this course.\n\nPrivileged Access Management\nPrivileged accounts have higher access rights than regular user accounts, enabling critical system management tasks like accessing sensitive data, configuring software, and managing security settings. However, this elevated access also makes them prime targets for attackers. If compromised, they can grant unauthorized access, disrupt services, or spread malware.\nPrivileged Access Management, or PAM, is a security strategy and framework designed to control, monitor, and secure these accounts by implementing strict controls over access. Effective Privileged Access Management include:\n\nPrinciple of Least Privilege: Users are assigned the minimum permissions necessary for their job.\nSeparation of Duties: No single individual should have control over critical systems, processes, or data.\nMulti-Factor Authentication(MFA): MFA adds an extra layer of security before accessing privileged accounts.\nMonitoring & Logging: User activities should be logged and monitored for auditing and compliance.\nRole-Based Access Control(RBAC): Permissions are assigned based on one’s job role, preventing excessive permissions.\n\n\n\nFederation\nFederation allows users to access multiple systems or applications across different organizations using a single authentication process. Instead of creating separate credentials for each system, users are authenticated through a trusted identity provider, which then provides access to various services. A common example of this is Spotify’s log in page shown below. As you can see, in addition to the email/username and password fields, users have the option to use either their Google, Facebook, or Apple credentials to log in to their Spotify accounts. For example, when a user logs in to their Spotify account using Google, Spotify redirects them to Google where they will enter their Google credentials. Google authenticates the user and sends a secure token to Spotify. Spotify verifies the token and grants them access to their platform.\n\n\n\nAn example of federation with Spotify.\n\n\nThe benefits of federation include the following:\n\nSingle Sign-On: Entering one’s credentials gains them access to multiple systems.\nEnhanced Security: Fewer passwords reduces the risk of password theft.\nConvenience: Users gain faster access to multiple applications using a trusted login.\n\n\n\nIAM Protocols\nIAM protocols help manage authentication, authorization, and access control in IT environments. Some key protocols discussed in the course were:\n\nSecurity Assertion Markup Language (SAML): an XML-based protocol enabling Single Sign-On (SSO) by exchanging authentication and authorization data between identity and service providers.\nOpen Authentication (OAuth 2.0): grants third-party apps limited access to user data without exposing credentials, commonly used for API access.\nOpenID Connect (OIDC): extends OAuth to verify user identity and provide authentication.\nLightweight Directory Access Protocol (LDAP): facilitates directory-based authentication and authorization and is essential for Active Directory. Active Directory is a directory service used to store information about users, objects and devices within an organization’s network.\nKerberos: provides secure authentication within networks using a ticket-based system to authenticate users without transmitting passwords over a network.\n\nThis course allowed me to gain an even deeper understanding of IAM fundamentals, and I especially enjoyed learning about federation and the different IAM protocols. I’m looking forward to applying my newfound knowledge as I build out my portfolio."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]